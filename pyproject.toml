[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "autocheck-anyrouter"
version = "1.0.0"
description = "AnyRouter 自动签到工具，支持多种通知方式和自定义配置"
requires-python = ">=3.11"
dependencies = [
  "httpx[http2]==0.28.1",
  "json5==0.10.0",
  "playwright==1.55.0",
  "python-dotenv==1.1.1",
  "stencil-template==4.1.1"
]

[project.scripts]
autocheck-anyrouter = "src.main:run_main"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[project.optional-dependencies]
dev = [
  "pytest==8.4.1",
  "pytest-asyncio==0.25.2",
  "pytest-mock==3.14.1",
  "pytest-cov==6.2.1",
  "pytest-github-actions-annotate-failures==0.2.0",
  "python-dotenv==1.1.1",
  "ruff==0.14.0"
]

[tool.ruff]
line-length = 120
fix = true

[tool.ruff.lint]
select = ["ASYNC", "E", "F", "FAST", "I", "PLE"]
ignore = ["ASYNC109", "ASYNC230", "E101", "E402", "E501", "F841", "E731"]
unfixable = ["E101", "E402", "E501", "F841", "E731"]

[tool.ruff.format]
quote-style = "single"
indent-style = "tab"
docstring-code-format = true

[tool.pyright]
include = ["src", "tests"]
extraPaths = ["src"]
typeCheckingMode = "basic"

[tool.coverage.run]
relative_files = true
source = ["src"]
omit = ["tests/*", "**/__init__.py"]

[tool.coverage.report]
fail_under = 59
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "raise AssertionError",
  "raise NotImplementedError",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
  "@abstractmethod"
]
