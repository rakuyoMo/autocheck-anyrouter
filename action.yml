name: 'AutoCheck AnyRouter'
description: '自动签到 AnyRouter 服务'
author: 'rakuyo'

branding:
  icon: 'check-circle'
  color: 'green'

inputs:
  accounts:
    description: 'AnyRouter 账号信息'
    required: true
  # 通知配置
  dingtalk-notif-config:
    description: '钉钉通知配置'
    required: false
  email-notif-config:
    description: '邮件通知配置'
    required: false
  pushplus-notif-config:
    description: 'PushPlus 通知配置'
    required: false
  serverpush-notif-config:
    description: 'Server酱通知配置'
    required: false
  feishu-notif-config:
    description: '飞书通知配置'
    required: false
  wecom-notif-config:
    description: '企业微信通知配置'
    required: false
  show-sensitive-info:
    description: '是否显示敏感信息'
    required: false
    default: false

runs:
  using: 'composite'
  steps:
    - name: 🔧 安装 Mise
      uses: jdx/mise-action@v3
      with:
        cache_key: "{{default}}-${{ hashFiles('pyproject.toml') }}"

    - name: ⚙️ 安装依赖
      shell: bash
      run: mise run install

    - name: 🎭 配置 Playwright 环境
      uses: ./.github/actions/setup-playwright
      id: playwright-setup

    - name: 💾 恢复余额历史缓存
      uses: actions/cache@v4
      with:
        path: balance_hash.txt
        key: balance-hash
        restore-keys: |
          balance-hash-

    - name: 🚀 执行签到任务
      shell: bash
      env:
        # 账号配置
        ANYROUTER_ACCOUNTS: ${{ inputs.accounts }}
        # 仓库可见性，用于隐私控制
        REPO_VISIBILITY: ${{ github.event.repository.visibility }}
        # 通知配置
        DINGTALK_NOTIF_CONFIG: ${{ inputs.dingtalk-notif-config }}
        EMAIL_NOTIF_CONFIG: ${{ inputs.email-notif-config }}
        PUSHPLUS_NOTIF_CONFIG: ${{ inputs.pushplus-notif-config }}
        SERVERPUSH_NOTIF_CONFIG: ${{ inputs.serverpush-notif-config }}
        FEISHU_NOTIF_CONFIG: ${{ inputs.feishu-notif-config }}
        WECOM_NOTIF_CONFIG: ${{ inputs.wecom-notif-config }}
        SHOW_SENSITIVE_INFO: ${{ inputs.show-sensitive-info }}
      run: mise run checkin
